{##
 # macros.twig
 # 
 # Contains a list of twig macros.
 #}

{##
 # Displays a set of confirm buttons.
 # For every string in the buttons array a button by that name will be created with their
 # id set to {{ name }}_{{ button name }}. Button names should always be lower case.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param string name What to name the widget (used for namespacing)
 # @param array(string) buttons The names of buttons to add to the set.
 # @param string back What to label the button which will return to the previous widget.
                 (leaving this blank will omit the back button).
 # @param string align How to align the buttons (default is right)
 # @param boolean spacer Whether to include spacing before including the list.
 #}
{% macro confirm_buttons( slot, name, buttons, back, align, spacer ) %}
  <script type="text/javascript">
  $( function() {
    // back button
    $( "#{{ name }}_back" ).click( function() {
      $slot = $( "#" + {{ slot }} + "_slot" );
      if( "#main_slot" == $slot.selector ) slot_prev( {{ slot }} );
      else $slot.dialog( "close" ); // assume we're in a popup dialog
    } );
  
    // create a button set
    $( "#{{ name }}_confirm_buttons" ).buttonset();
  } );
  </script>
  <div id="{{ name }}_confirm_buttons"
       {{ spacer|default(false) ? 'class="spacer" ' : ''}}
       style="text-align: {{ align|default('left') }};">

  {% for button in buttons %}
    <button id="{{ name }}_{{ button }}" style="width:120px">{{ button|capitalize }}</button>
  {% endfor %}
  
  {% if back|default(false) %}
    <button id="{{ name }}_back" style="width:120px">{{ back }}</button>
  {% endif %}
  </div>
{% endmacro %}

{##
 # Includes a view widget, if view is set.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param string subject The view's subject.
 # @param array view The view's arguments.
 # @param boolean spacer Whether to include spacing before including the view.
 #}
{% macro include_view( subject, view, spacer ) %}
  {% if view|default(false) %}
    {% if spacer|default(false) %}<div class="spacer" />{% endif %}
    {% include [ subject, "view.twig" ]|join("_") with view %}
  {% endif %}
{% endmacro %}

{##
 # Includes a list widget, if list is set.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param string subject The list's subject.
 # @param array list The list's arguments.
 # @param boolean spacer Whether to include spacing before including the list.
 #}
{% macro include_list( subject, list, spacer ) %}
  {% if list|default(false) %}
    {% if spacer|default(false) %}<div class="spacer" />{% endif %}
    {% include [ subject, "list.twig" ]|join("_") with list %}
  {% endif %}
{% endmacro %}

{##
 # Includes a calendar widget, if calendar is set.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param string subject The calendar's subject.
 # @param array calendar The calendar's arguments.
 # @param boolean spacer Whether to include spacing before including the calendar.
 #}
{% macro include_calendar( subject, calendar, spacer ) %}
  {% if calendar|default(false) %}
    {% if spacer|default(false) %}<div class="spacer" />{% endif %}
    {% include [ subject, "calendar.twig" ]|join("_") with calendar %}
  {% endif %}
{% endmacro %}

{##
 # This widget displays an icon/button which pops up a list of notes.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param string subject What subject to show notes for.
 # @param int id The primary id of the subject to get notes for.
 # @param int note_count The current number of notes.
 #}
{% macro note_widget( namespace, subject, id, icon, text ) %}
  
  <script type="text/javascript">
  $( function() {
    {% if icon %}
      // identify a note by changing classes on mouse over/out
      $( "#{{ namespace }}_{{ subject }}_{{ id }}_note" ).mouseover( function() {
        $(this).removeClass( "padded" );
        $(this).addClass( "ui-widget-content" );
      } ).mouseout( function() {
        $(this).removeClass( "ui-widget-content" );
        $(this).addClass( "padded" );
      } );
    {% else %}
      $( "#{{ namespace }}_{{ subject }}_{{ id }}_note" ).button( {
        {% if text %}
          text: true,
          label: "{{ text }}",
        {% else %}
          text: false,
        {% endif %}
        icons: { primary: "ui-icon-comment" }
      } );
    {% endif %}

    // note click callback
    $( "#{{ namespace }}_{{ subject }}_{{ id }}_note" ).click( function() {
      var args = new Object();
      args.category = "{{ subject }}";
      args.category_id = {{ id }};
      slot_load( "note", "note", "list", args );
      $( "#note_slot" ).dialog( {
        title: "{{ subject|capitalize }} notes",
        modal: true,
        width: 550,
        height: 600,
        close: function( event, ui ) {
          // refresh the main slot to refresh any note counts
          slot_refresh( "main" );
        }
      } );
    } );
  } );
  </script>
  
  {% if icon %}
    <div id="{{ namespace }}_{{ subject }}_{{ id }}_note" class="note_icon padded">
      <div class="note_icon ui-icon ui-icon-comment" />
      {% if text|default(0) %}
        <div style="font-size:0.6em; position:relative; bottom:2px; right:2px"
             class="note_icon">{{ text }}</div>
      {% endif %}
    </div>
  {% else %}
    <button id="{{ namespace }}_{{ subject }}_{{ id }}_note">&nbsp;</button>
  {% endif %}

{% endmacro %}
