{##
 # base_report.twig
 # 
 # Test report.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @see widget.twig for parameters
 #}
{% extends "widget.twig" %}

{% block javascript %}

  {{ parent() }}
  <script type="text/javascript">
    $( function () {
      // download button
      $( "#{{ widget.compound }}_download" ).click( function () {
        // push the form information
        var args = new Object();
        $( "#{{ widget.full }}_download_form :input" ).each( function() {
          var id_string = $(this).attr( "id" );
          var param_name = id_string.substring( id_string.lastIndexOf('__') + 2 );
          args[param_name] = "checkbox" == $(this).attr( "type" )
                           ? ( $(this).is( ":checked" ) ? 1 : 0 )
                           : $(this).val();
        } );
        
        window.location = "{{ widget.subject }}/report?" + jQuery.param( args );
      } );
    } );
  </script>

{% endblock javascript %}

{% block widget %}

  <div id="{{ widget.full }}_download_form" class="ui-widget ui-widget-content app-widget-content">

    {# put hidden parameters here #}
    {% for param_id, param in parameters %}
      {% if 'hidden' == param.type %}
        {% set param_value = param.value is defined ? param.value : "" %}
        <input id="{{ widget.full }}__{{ param_id }}" type="hidden" value="{{ param_value }}" />
      {% endif %}
    {% endfor %}

    <div class="spacer">{{ description|default( "" ) }}</div>
    <table>
      {% for param_id, param in parameters %}
        {# make null entries an empty string #}
        {% set param_value = param.value is defined ? param.value : "" %}
        
        {% if 'enum' == param.type and 1 == param.enum|length %}
  
          {# don't display enums where there is only one possible value #}
          <tr><td style="height:0px">
          {% for value_id, value in param.enum %}
            <input id="{{ widget.full }}__{{ param_id }}" type="hidden"
                   value="{{ 'NULL' == value_id ? '' : value_id }}" />
          {% endfor %}
          </td></tr>

        {% elseif 'hidden' != param.type %}

          <tr>
            <td class="heading">
              <span class="title">{{ param.heading }}:</span>
            </td>
            <td class="content">
  
            {% if 'boolean' == param.type %}
          
              <select id="{{ widget.full }}__{{ param_id }}"
                      style="width: 100%"
                      class="ui-state-default">
                <option{{ 'Yes' == param_value ? ' selected' : '' }} value="1">Yes</option>
                <option{{ 'No' == param_value ? ' selected' : '' }} value="0">No</option>
              </select>
        
            {% elseif 'datetime' == param.type %}
        
              <script type="text/javascript">
                $( function () {
                  $( "#{{ widget.full }}__{{ param_id }}" ).datetimepicker( {
                    dateFormat: 'yy-mm-dd',
                    timeFormat: 'hh:mm',
                    ampm: false,
                    stepMinute: 5,
                    {% if param.min_date|default( false ) %}
                      minDateTime: new Date( '{{ param.min_date }}' ),
                    {% endif %}
                    {% if param.max_date|default( false ) %}
                      maxDateTime: new Date( '{{ param.max_date }}' ),
                    {% endif %}
                    showAnim: 'slideDown'
                  } );
                } );
              </script>
              <input id="{{ widget.full }}__{{ param_id }}" type="text" style="width:99%"
                     value="{{ param_value }}" readonly />
        
            {% elseif 'date' == param.type %}
        
              <script type="text/javascript">
                $( function () {
                  $( "#{{ widget.full }}__{{ param_id }}" ).datepicker( {
                    dateFormat: 'yy-mm-dd',
                    {% if param.min_date|default( false ) %}
                      minDate: new Date( '{{ param.min_date }}' ),
                    {% endif %}
                    {% if param.max_date|default( false ) %}
                      maxDate: new Date( '{{ param.max_date }}' ),
                    {% endif %}
                    showAnim: 'slideDown'
                  } );
                } );
              </script>
              <input id="{{ widget.full }}__{{ param_id }}" type="text" style="width:99%"
                     value="{{ param_value }}" readonly />
        
            {% elseif 'time' == param.type %}
        
              <script type="text/javascript">
                $( function () {
                  $( "#{{ widget.full }}__{{ param_id }}" ).timepicker( {
                    timeFormat: 'hh:mm',
                    showAnim: 'slideDown',
                    ampm: false,
                    stepMinute: 5
                    {% if "start_time" == param_id %}
                    , onClose: function( timeText, date_inst, time_inst ) {
                      // update end_time
                      end_time_obj =
                        new Date( "Jan 2, 2000 " + $( "#{{ widget.full }}__end_time" ).val() );
                      old_time_obj = 
                        new Date( "Jan 2, 2000 " + date_inst.lastVal );
                      new_time_obj = new Date( "Jan 2, 2000 " + timeText );
                      end_time_obj.setTime(
                        end_time_obj.getTime() +
                        ( new_time_obj.getTime() - old_time_obj.getTime() ) );
                      var hours = ( end_time_obj.getHours() < 10 ? '0' : '' ) +
                                  end_time_obj.getHours();
                      var minutes = ( end_time_obj.getMinutes() < 10 ? '0' : '' ) +
                                    end_time_obj.getMinutes();
                      $( "#{{ widget.full }}__end_time" ).val( hours + ":" + minutes );
                    }
                    {% endif %}
                  } );
                } );
              </script>
              <input id="{{ widget.full }}__{{ param_id }}" type="text" style="width:99%"
                     value="{{ param_value }}" readonly />
        
            {% elseif 'enum' == param.type %}
            
              {# display all values in a select #}
              <select id="{{ widget.full }}__{{ param_id }}"
                      style="width: 100%"
                      class="ui-state-default">
                {% for value_id, value in param.enum %}
                <option{{ param_value == value_id ? ' selected' : '' }}
                        value="{{ 'NULL' == value_id ? '' : value_id }}">{{ value }}</option>
                {% endfor %}
              </select>
      
            {% elseif 'string' == param.type %}
          
              <input id="{{ widget.full }}__{{ param_id }}" type="text" style="width:99%"
                     value="{{ param_value }}" />
          
            {% elseif 'number' == param.type %}
          
              <input id="{{ widget.full }}__{{ param_id }}" type="text" style="width:99%"
                     value="{{ param.value|default(0) }}" />
          
            {% elseif 'text' == param.type %}
          
              <textarea id="{{ widget.full }}__{{ param_id }}">{{ param_value }}</textarea>
          
            {% endif %}
        
            {% if param.note is defined %}
              <div class="help_note">
                {% autoescape false %}
                  {{ param.note }}
                {% endautoescape %}
              </div>
            {% endif %}
            </td>
          </tr>

        {% endif %}
      {% endfor %}
    </table>
    <hr class="ui-widget ui-widget-content">
    <table>
      <tr>
        <td class="heading">Format:</td>
        <td class="content">
          <select id="{{ widget.full }}__format"
                  style="width: 100%" class="ui-state-default">
            <option value="xlsx">Microsoft Excel 2007</option>
            <option value="xls">Microsoft Excel 5.0</option>
            <option value="html">HTML (web page)</option>
            {# PDF file types were causing problems, dissabled for now
              <option value="pdf">PDF</option>
            #}
            <option value="csv">CSV</option>
          </select>
        </td>
      </tr>
    </table>
    <div class="spacer"></div>
  </div>
  {% from 'macros.twig' import confirm_buttons %}
  {{ confirm_buttons( slot, widget.compound, [ 'download' ], false, 'right', true ) }}
{% endblock widget %}
