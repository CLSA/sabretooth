-- MySQL Script generated by MySQL Workbench
-- Fri 24 Jul 2015 01:21:23 PM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='';

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cenozo` ;

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cenozo` ;
-- -----------------------------------------------------
-- Schema sabretooth
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sabretooth` ;

-- -----------------------------------------------------
-- Schema sabretooth
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sabretooth` ;
USE `cenozo` ;

-- -----------------------------------------------------
-- Table `cenozo`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `email` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `dk_active` (`active` ASC),
  UNIQUE INDEX `uq_email` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`role` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`role` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `tier` INT UNSIGNED NOT NULL DEFAULT 1 COMMENT '1 = normal, 2 = site admin, 3 = global admin',
  `all_sites` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`region` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`region` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `abbreviation` VARCHAR(5) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_abbreviation` (`abbreviation` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`cohort`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`cohort` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`cohort` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `grouping` ENUM('region','jurisdiction') NOT NULL DEFAULT 'region',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`language` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`language` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0,
  `code` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_code` (`code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`event_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`event_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`event_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` VARCHAR(45) NOT NULL,
  `create_timestamp` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `version` VARCHAR(45) NOT NULL,
  `release_based` TINYINT(1) NOT NULL DEFAULT 1,
  `release_event_type_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL COMMENT 'The default language for the application.',
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_event_type_id` (`release_event_type_id` ASC),
  CONSTRAINT `fk_application_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_event_type_id`
    FOREIGN KEY (`release_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`site` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`site` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `timezone` ENUM('Canada/Pacific','Canada/Mountain','Canada/Central','Canada/Eastern','Canada/Atlantic','Canada/Newfoundland') NOT NULL,
  `title` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NULL,
  `address1` VARCHAR(512) NULL,
  `address2` VARCHAR(512) NULL,
  `city` VARCHAR(100) NULL,
  `region_id` INT UNSIGNED NULL,
  `postcode` VARCHAR(10) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name_application_id` (`name` ASC, `application_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  CONSTRAINT `fk_site_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`access`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`access` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`access` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NULL COMMENT 'The last time the access was used',
  `microtime` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  UNIQUE INDEX `uq_user_id_role_id_site_id` (`user_id` ASC, `role_id` ASC, `site_id` ASC),
  INDEX `dk_datetime_microtime` (`datetime` DESC, `microtime` DESC),
  CONSTRAINT `fk_access_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`postcode`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`postcode` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`postcode` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(7) NOT NULL COMMENT 'Postcodes with the same province, tz and dst are grouped.',
  `region_id` INT UNSIGNED NOT NULL,
  `timezone_offset` FLOAT NOT NULL,
  `daylight_savings` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  CONSTRAINT `fk_postcode_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`person` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`person` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`address` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`address` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `person_id` INT UNSIGNED NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `rank` INT NOT NULL,
  `address1` VARCHAR(512) NOT NULL,
  `address2` VARCHAR(512) NULL DEFAULT NULL,
  `city` VARCHAR(100) NOT NULL,
  `region_id` INT UNSIGNED NOT NULL,
  `postcode` VARCHAR(10) NOT NULL,
  `timezone_offset` FLOAT NOT NULL,
  `daylight_savings` TINYINT(1) NOT NULL,
  `january` TINYINT(1) NOT NULL DEFAULT 1,
  `february` TINYINT(1) NOT NULL DEFAULT 1,
  `march` TINYINT(1) NOT NULL DEFAULT 1,
  `april` TINYINT(1) NOT NULL DEFAULT 1,
  `may` TINYINT(1) NOT NULL DEFAULT 1,
  `june` TINYINT(1) NOT NULL DEFAULT 1,
  `july` TINYINT(1) NOT NULL DEFAULT 1,
  `august` TINYINT(1) NOT NULL DEFAULT 1,
  `september` TINYINT(1) NOT NULL DEFAULT 1,
  `october` TINYINT(1) NOT NULL DEFAULT 1,
  `november` TINYINT(1) NOT NULL DEFAULT 1,
  `december` TINYINT(1) NOT NULL DEFAULT 1,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_person_id_rank` (`person_id` ASC, `rank` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  INDEX `fk_person_id` (`person_id` ASC),
  INDEX `dk_city` (`city` ASC),
  INDEX `dk_postcode` (`postcode` ASC),
  CONSTRAINT `fk_address_region`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_address_person`
    FOREIGN KEY (`person_id`)
    REFERENCES `cenozo`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`age_group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`age_group` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`age_group` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `lower` INT NOT NULL,
  `upper` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_lower` (`lower` ASC),
  UNIQUE INDEX `uq_upper` (`upper` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`source` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`source` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `override_quota` TINYINT(1) NOT NULL DEFAULT 0,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`state` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`state` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `rank` INT NOT NULL,
  `description` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`participant` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`participant` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `person_id` INT UNSIGNED NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `uid` VARCHAR(45) NOT NULL COMMENT 'External unique ID',
  `source_id` INT UNSIGNED NULL DEFAULT NULL,
  `cohort_id` INT UNSIGNED NOT NULL,
  `grouping` VARCHAR(45) NULL DEFAULT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `other_name` VARCHAR(100) NULL DEFAULT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `gender` ENUM('male','female') NOT NULL,
  `date_of_birth` DATE NULL DEFAULT NULL,
  `age_group_id` INT UNSIGNED NULL DEFAULT NULL,
  `state_id` INT UNSIGNED NULL DEFAULT NULL,
  `language_id` INT UNSIGNED NULL,
  `use_informant` TINYINT(1) NULL DEFAULT NULL,
  `override_quota` TINYINT(1) NOT NULL DEFAULT 0,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `email_datetime` DATETIME NULL DEFAULT NULL,
  `email_old` VARCHAR(255) NULL DEFAULT NULL,
  `withdraw_letter` CHAR(1) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_uid` (`uid` ASC),
  UNIQUE INDEX `uq_person_id` (`person_id` ASC),
  INDEX `dk_active` (`active` ASC),
  INDEX `dk_uid` (`uid` ASC),
  INDEX `fk_person_id` (`person_id` ASC),
  INDEX `fk_age_group_id` (`age_group_id` ASC),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_source_id` (`source_id` ASC),
  INDEX `fk_state_id` (`state_id` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  CONSTRAINT `fk_participant_person_id`
    FOREIGN KEY (`person_id`)
    REFERENCES `cenozo`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_age_group_id`
    FOREIGN KEY (`age_group_id`)
    REFERENCES `cenozo`.`age_group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_source_id`
    FOREIGN KEY (`source_id`)
    REFERENCES `cenozo`.`source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_state_id`
    FOREIGN KEY (`state_id`)
    REFERENCES `cenozo`.`state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`alternate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`alternate` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`alternate` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `person_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `alternate` TINYINT(1) NOT NULL,
  `informant` TINYINT(1) NOT NULL,
  `proxy` TINYINT(1) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `association` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_person_id` (`person_id` ASC),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_person_id` (`person_id` ASC),
  CONSTRAINT `fk_alternate_participant`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alternate_person`
    FOREIGN KEY (`person_id`)
    REFERENCES `cenozo`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`availability`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`availability` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`availability` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `monday` TINYINT(1) NOT NULL DEFAULT 0,
  `tuesday` TINYINT(1) NOT NULL DEFAULT 0,
  `wednesday` TINYINT(1) NOT NULL DEFAULT 0,
  `thursday` TINYINT(1) NOT NULL DEFAULT 0,
  `friday` TINYINT(1) NOT NULL DEFAULT 0,
  `saturday` TINYINT(1) NOT NULL DEFAULT 0,
  `sunday` TINYINT(1) NOT NULL DEFAULT 0,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `dk_start_time` (`start_time` ASC),
  INDEX `dk_end_time` (`end_time` ASC),
  CONSTRAINT `fk_availability_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`consent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`consent` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`consent` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `accept` TINYINT(1) NOT NULL,
  `written` TINYINT(1) NOT NULL,
  `date` DATE NOT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `dk_date` (`date` ASC),
  CONSTRAINT `fk_consent_participant`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`jurisdiction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`jurisdiction` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`jurisdiction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `postcode` VARCHAR(7) NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `longitude` FLOAT NOT NULL,
  `latitude` FLOAT NOT NULL,
  `distance` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_postcode` (`postcode` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_jurisdiction_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_jurisdiction_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`phone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`phone` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`phone` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `person_id` INT UNSIGNED NOT NULL,
  `address_id` INT UNSIGNED NULL DEFAULT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `rank` INT NOT NULL,
  `type` ENUM('home','home2','work','work2','mobile','mobile2','other','other2') NOT NULL,
  `number` VARCHAR(45) NOT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_person_id_rank` (`person_id` ASC, `rank` ASC),
  INDEX `fk_address_id` (`address_id` ASC),
  INDEX `fk_person_id` (`person_id` ASC),
  CONSTRAINT `fk_phone_address`
    FOREIGN KEY (`address_id`)
    REFERENCES `cenozo`.`address` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_phone_person`
    FOREIGN KEY (`person_id`)
    REFERENCES `cenozo`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`quota`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`quota` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`quota` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `region_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `gender` ENUM('male','female') NOT NULL,
  `age_group_id` INT UNSIGNED NOT NULL,
  `population` INT NOT NULL,
  `disabled` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_region_id_site_id_gender_age_group_id` (`region_id` ASC, `site_id` ASC, `gender` ASC, `age_group_id` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  INDEX `fk_age_group_id` (`age_group_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  CONSTRAINT `fk_quota_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quota_age_group_id`
    FOREIGN KEY (`age_group_id`)
    REFERENCES `cenozo`.`age_group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quota_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`person_note`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`person_note` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`person_note` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `person_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `sticky` TINYINT(1) NOT NULL DEFAULT 0,
  `datetime` DATETIME NOT NULL,
  `note` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_person_id` (`person_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `dk_sticky_datetime` (`sticky` ASC, `datetime` ASC),
  CONSTRAINT `fk_participant_note_person`
    FOREIGN KEY (`person_id`)
    REFERENCES `cenozo`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_note_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_participant` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_participant` (
  `application_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `preferred_site_id` INT UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`application_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_preferred_site_id` (`preferred_site_id` ASC),
  CONSTRAINT `fk_application_has_participant_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_participant_preferred_site_id`
    FOREIGN KEY (`preferred_site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`event` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`event` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `event_type_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  INDEX `fk_event_type_id` (`event_type_id` ASC),
  CONSTRAINT `fk_event_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_event_type_id`
    FOREIGN KEY (`event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`unique_identifier_pool`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`unique_identifier_pool` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`unique_identifier_pool` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `uid` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uid_UNIQUE` (`uid` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_cohort`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_cohort` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_cohort` (
  `application_id` INT UNSIGNED NOT NULL,
  `cohort_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_id`, `cohort_id`),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_cohort_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_cohort_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_role` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_role` (
  `application_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_id`, `role_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_role_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_role_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_application`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user_has_application` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_application` (
  `user_id` INT UNSIGNED NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `theme` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`, `application_id`),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_application_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_application_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`hin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`hin` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`hin` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `access` TINYINT(1) NULL DEFAULT NULL,
  `future_access` TINYINT(1) NULL DEFAULT NULL,
  `code` TINYINT(1) NULL DEFAULT NULL,
  `region_id` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  UNIQUE INDEX `uq_participant_id` (`participant_id` ASC),
  CONSTRAINT `fk_hin_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hin_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`region_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`region_site` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`region_site` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `region_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  UNIQUE INDEX `uq_application_id_region_id_language_id` (`application_id` ASC, `region_id` ASC, `language_id` ASC),
  CONSTRAINT `fk_region_site_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_region_site_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_region_site_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_region_site_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`role_has_state` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_state` (
  `role_id` INT UNSIGNED NOT NULL,
  `state_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`role_id`, `state_id`),
  INDEX `fk_state_id` (`state_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_state_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_state_state_id`
    FOREIGN KEY (`state_id`)
    REFERENCES `cenozo`.`state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user_has_language` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_language` (
  `user_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`user_id`, `language_id`),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_language_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_language_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`activity` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`activity` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_activity_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `sabretooth` ;

-- -----------------------------------------------------
-- Table `sabretooth`.`interview_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`interview_method` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`interview_method` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`qnaire`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`qnaire` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`qnaire` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `rank` INT NOT NULL,
  `first_attempt_event_type_id` INT UNSIGNED NOT NULL,
  `reached_event_type_id` INT UNSIGNED NOT NULL,
  `completed_event_type_id` INT UNSIGNED NOT NULL,
  `interview_method_id` INT UNSIGNED NOT NULL,
  `prev_qnaire_id` INT UNSIGNED NULL DEFAULT NULL COMMENT 'The qnaire which must be completed before this one begins.',
  `delay` INT NOT NULL DEFAULT 0 COMMENT 'How many weeks after then end of the previous qnaire before starting.',
  `withdraw_sid` INT NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  INDEX `fk_prev_qnaire_id` (`prev_qnaire_id` ASC),
  INDEX `fk_interview_method_id` (`interview_method_id` ASC),
  INDEX `fk_first_attempt_event_type_id` (`first_attempt_event_type_id` ASC),
  INDEX `fk_reached_event_type_id` (`reached_event_type_id` ASC),
  INDEX `fk_completed_event_type_id` (`completed_event_type_id` ASC),
  CONSTRAINT `fk_qnaire_prev_qnaire_id`
    FOREIGN KEY (`prev_qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_interview_method_id`
    FOREIGN KEY (`interview_method_id`)
    REFERENCES `sabretooth`.`interview_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_first_attempt_event_type_id`
    FOREIGN KEY (`first_attempt_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_reached_event_type_id`
    FOREIGN KEY (`reached_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_completed_event_type_id`
    FOREIGN KEY (`completed_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`phase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`phase` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`phase` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `qnaire_id` INT UNSIGNED NOT NULL,
  `sid` INT NOT NULL COMMENT 'The default survey ID to use for this phase.',
  `rank` SMALLINT UNSIGNED NOT NULL,
  `repeated` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  UNIQUE INDEX `uq_qnaire_id_rank` (`qnaire_id` ASC, `rank` ASC),
  CONSTRAINT `fk_phase_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'aka: qnaire_has_survey';


-- -----------------------------------------------------
-- Table `sabretooth`.`interview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`interview` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`interview` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `qnaire_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `interview_method_id` INT UNSIGNED NOT NULL,
  `require_supervisor` TINYINT(1) NOT NULL DEFAULT 0,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  UNIQUE INDEX `uq_participant_id_qnaire_id` (`participant_id` ASC, `qnaire_id` ASC),
  INDEX `fk_interview_method_id` (`interview_method_id` ASC),
  INDEX `dk_start_datetime` (`start_datetime` ASC),
  INDEX `dk_end_datetime` (`end_datetime` ASC),
  CONSTRAINT `fk_interview_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interview_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interview_interview_method_id`
    FOREIGN KEY (`interview_method_id`)
    REFERENCES `sabretooth`.`interview_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'aka: qnaire_has_participant';


-- -----------------------------------------------------
-- Table `sabretooth`.`queue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`queue` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`queue` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `rank` INT UNSIGNED NULL DEFAULT NULL,
  `qnaire_specific` TINYINT(1) NOT NULL,
  `time_specific` TINYINT(1) NOT NULL,
  `parent_queue_id` INT UNSIGNED NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  INDEX `fk_parent_queue_id` (`parent_queue_id` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC),
  CONSTRAINT `fk_queue_parent_queue_id`
    FOREIGN KEY (`parent_queue_id`)
    REFERENCES `sabretooth`.`queue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`assignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`assignment` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`assignment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL COMMENT 'The site from which the user was assigned.',
  `interview_id` INT UNSIGNED NOT NULL,
  `queue_id` INT UNSIGNED NOT NULL COMMENT 'The queue that the assignment came from.',
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_interview_id` (`interview_id` ASC),
  INDEX `fk_queue_id` (`queue_id` ASC),
  INDEX `dk_start_datetime` (`start_datetime` ASC),
  INDEX `dk_end_datetime` (`end_datetime` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  CONSTRAINT `fk_assignment_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assignment_queue_id`
    FOREIGN KEY (`queue_id`)
    REFERENCES `sabretooth`.`queue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assignment_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assignment_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`phone_call`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`phone_call` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`phone_call` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `assignment_id` INT UNSIGNED NOT NULL,
  `phone_id` INT UNSIGNED NOT NULL,
  `start_datetime` DATETIME NOT NULL COMMENT 'The time the call started.',
  `end_datetime` DATETIME NULL DEFAULT NULL COMMENT 'The time the call endede.',
  `status` ENUM('contacted','busy','no answer','machine message','machine no message','fax','disconnected','wrong number','not reached','hang up','soft refusal') NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_assignment_id` (`assignment_id` ASC),
  INDEX `dk_status` (`status` ASC),
  INDEX `fk_phone_id` (`phone_id` ASC),
  INDEX `dk_start_datetime` (`start_datetime` ASC),
  INDEX `dk_end_datetime` (`end_datetime` ASC),
  CONSTRAINT `fk_phone_call_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_phone_call_phone_id`
    FOREIGN KEY (`phone_id`)
    REFERENCES `cenozo`.`phone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`shift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`shift` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`shift` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `dk_start_datetime` (`start_datetime` ASC),
  INDEX `dk_end_datetime` (`end_datetime` ASC),
  CONSTRAINT `fk_shift_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shift_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`appointment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`appointment` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`appointment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `interview_id` INT UNSIGNED NOT NULL,
  `phone_id` INT UNSIGNED NULL DEFAULT NULL,
  `assignment_id` INT UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NOT NULL,
  `type` ENUM('full','half') NOT NULL DEFAULT 'full',
  `reached` TINYINT(1) NULL DEFAULT NULL COMMENT 'If the appointment was met, whether the participant was reached.',
  PRIMARY KEY (`id`),
  INDEX `fk_assignment_id` (`assignment_id` ASC),
  INDEX `dk_reached` (`reached` ASC),
  INDEX `fk_phone_id` (`phone_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  INDEX `fk_interview_id` (`interview_id` ASC),
  CONSTRAINT `fk_appointment_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_phone_id`
    FOREIGN KEY (`phone_id`)
    REFERENCES `cenozo`.`phone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`shift_template`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`shift_template` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`shift_template` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `operators` INT UNSIGNED NOT NULL,
  `repeat_type` ENUM('weekly','day of month','day of week') NOT NULL DEFAULT 'weekly',
  `repeat_every` INT NOT NULL DEFAULT 1,
  `monday` TINYINT(1) NOT NULL DEFAULT 0,
  `tuesday` TINYINT(1) NOT NULL DEFAULT 0,
  `wednesday` TINYINT(1) NOT NULL DEFAULT 0,
  `thursday` TINYINT(1) NOT NULL DEFAULT 0,
  `friday` TINYINT(1) NOT NULL DEFAULT 0,
  `saturday` TINYINT(1) NOT NULL DEFAULT 0,
  `sunday` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `dk_start_time` (`start_time` ASC),
  INDEX `dk_end_time` (`end_time` ASC),
  INDEX `dk_start_date` (`start_date` ASC),
  INDEX `dk_end_date` (`end_date` ASC),
  CONSTRAINT `fk_shift_template_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`recording`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`recording` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`recording` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `interview_id` INT UNSIGNED NOT NULL,
  `assignment_id` INT UNSIGNED NULL DEFAULT NULL,
  `rank` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_interview_id` (`interview_id` ASC),
  UNIQUE INDEX `uq_interview_rank` (`interview_id` ASC, `rank` ASC),
  INDEX `fk_assignment_id` (`assignment_id` ASC),
  CONSTRAINT `fk_recording_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recording_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`source_survey`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`source_survey` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`source_survey` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `phase_id` INT UNSIGNED NOT NULL,
  `source_id` INT UNSIGNED NOT NULL,
  `sid` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_phase_id` (`phase_id` ASC),
  INDEX `fk_source_id` (`source_id` ASC),
  UNIQUE INDEX `uq_phase_id_source_id` (`phase_id` ASC, `source_id` ASC),
  CONSTRAINT `fk_source_survey_phase_id`
    FOREIGN KEY (`phase_id`)
    REFERENCES `sabretooth`.`phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_source_survey_source_id`
    FOREIGN KEY (`source_id`)
    REFERENCES `cenozo`.`source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`source_withdraw`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`source_withdraw` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`source_withdraw` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `qnaire_id` INT UNSIGNED NOT NULL,
  `source_id` INT UNSIGNED NOT NULL,
  `sid` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  INDEX `fk_source_id` (`source_id` ASC),
  UNIQUE INDEX `uq_qnaire_id_source_id` (`qnaire_id` ASC, `source_id` ASC),
  CONSTRAINT `fk_source_withdraw_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_source_withdraw_source_id`
    FOREIGN KEY (`source_id`)
    REFERENCES `cenozo`.`source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`opal_instance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`opal_instance` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`opal_instance` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  UNIQUE INDEX `uq_user_id` (`user_id` ASC),
  CONSTRAINT `fk_opal_instance_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`callback`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`callback` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`callback` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `phone_id` INT UNSIGNED NULL DEFAULT NULL,
  `assignment_id` INT UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NOT NULL,
  `reached` TINYINT(1) NULL DEFAULT NULL COMMENT 'If the callback was met, whether the participant was reached.',
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_assignment_id` (`assignment_id` ASC),
  INDEX `dk_reached` (`reached` ASC),
  INDEX `fk_phone_id` (`phone_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  CONSTRAINT `fk_callback_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_callback_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_callback_phone_id`
    FOREIGN KEY (`phone_id`)
    REFERENCES `cenozo`.`phone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`qnaire_has_event_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`qnaire_has_event_type` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`qnaire_has_event_type` (
  `qnaire_id` INT UNSIGNED NOT NULL,
  `event_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`qnaire_id`, `event_type_id`),
  INDEX `fk_event_type_id` (`event_type_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  CONSTRAINT `fk_qnaire_has_event_type_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_has_event_type_event_type_id`
    FOREIGN KEY (`event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`prerecruit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`prerecruit` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`prerecruit` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `quota_id` INT UNSIGNED NOT NULL,
  `total` INT UNSIGNED NOT NULL DEFAULT 0,
  `selected` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'If selected this will be a number between 1 and total.',
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_quota_id` (`quota_id` ASC),
  UNIQUE INDEX `uq_participant_id_quota_id` (`participant_id` ASC, `quota_id` ASC),
  CONSTRAINT `fk_prerecruit_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prerecruit_quota_id`
    FOREIGN KEY (`quota_id`)
    REFERENCES `cenozo`.`quota` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`queue_has_participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`queue_has_participant` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`queue_has_participant` (
  `queue_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `site_id` INT UNSIGNED NULL,
  `qnaire_id` INT UNSIGNED NULL,
  `start_qnaire_date` DATE NULL,
  `interview_method_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`queue_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_queue_id` (`queue_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_interview_method_id` (`interview_method_id` ASC),
  CONSTRAINT `fk_queue_has_participant_queue_id`
    FOREIGN KEY (`queue_id`)
    REFERENCES `sabretooth`.`queue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_has_participant_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_has_participant_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_has_participant_interview_method_id`
    FOREIGN KEY (`interview_method_id`)
    REFERENCES `sabretooth`.`interview_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`cedar_instance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`cedar_instance` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`cedar_instance` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  UNIQUE INDEX `uq_user_id` (`user_id` ASC),
  CONSTRAINT `fk_cedar_instance_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`qnaire_has_interview_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`qnaire_has_interview_method` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`qnaire_has_interview_method` (
  `qnaire_id` INT UNSIGNED NOT NULL,
  `interview_method_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`qnaire_id`, `interview_method_id`),
  INDEX `fk_interview_method_id` (`interview_method_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  CONSTRAINT `fk_qnaire_has_interview_method_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_has_interview_method_interview_method_id`
    FOREIGN KEY (`interview_method_id`)
    REFERENCES `sabretooth`.`interview_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`ivr_appointment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`ivr_appointment` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`ivr_appointment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `interview_id` INT UNSIGNED NOT NULL,
  `phone_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `completed` TINYINT(1) NULL DEFAULT NULL COMMENT 'If the interview was completed by the appointment.',
  PRIMARY KEY (`id`),
  INDEX `dk_completed` (`completed` ASC),
  INDEX `fk_phone_id` (`phone_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  INDEX `fk_interview_id` (`interview_id` ASC),
  CONSTRAINT `fk_ivr_appointment_phone_id`
    FOREIGN KEY (`phone_id`)
    REFERENCES `cenozo`.`phone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ivr_appointment_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`qnaire_has_quota`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`qnaire_has_quota` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`qnaire_has_quota` (
  `qnaire_id` INT UNSIGNED NOT NULL,
  `quota_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`qnaire_id`, `quota_id`),
  INDEX `fk_quota_id` (`quota_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  CONSTRAINT `fk_qnaire_has_quota_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_qnaire_has_quota_quota_id`
    FOREIGN KEY (`quota_id`)
    REFERENCES `cenozo`.`quota` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Record means that quota is disabled for qnaire';


-- -----------------------------------------------------
-- Table `sabretooth`.`service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`service` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`service` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `method` ENUM('DELETE','GET','PATCH','POST','PUT') NOT NULL,
  `subject` VARCHAR(45) NOT NULL,
  `resource` TINYINT(1) NOT NULL DEFAULT 0,
  `restricted` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_method_subject_resource` (`method` ASC, `subject` ASC, `resource` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`role_has_service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`role_has_service` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`role_has_service` (
  `role_id` INT UNSIGNED NOT NULL,
  `service_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`role_id`, `service_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_service_id` (`service_id` ASC),
  CONSTRAINT `fk_role_has_service_service_id`
    FOREIGN KEY (`service_id`)
    REFERENCES `sabretooth`.`service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_service_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`queue_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`queue_state` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`queue_state` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `queue_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `qnaire_id` INT UNSIGNED NOT NULL,
  `enabled` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_queue_id` (`queue_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_qnaire_id` (`qnaire_id` ASC),
  UNIQUE INDEX `uq_queue_id_site_id_qnaire_id` (`queue_id` ASC, `site_id` ASC, `qnaire_id` ASC),
  CONSTRAINT `fk_queue_state_queue_id`
    FOREIGN KEY (`queue_id`)
    REFERENCES `sabretooth`.`queue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_state_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_queue_state_qnaire_id`
    FOREIGN KEY (`qnaire_id`)
    REFERENCES `sabretooth`.`qnaire` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`writelog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`writelog` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`writelog` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `method` ENUM('DELETE','PATCH','POST','PUT') NULL,
  `path` VARCHAR(512) NULL,
  `elapsed` FLOAT NULL,
  `status` INT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  CONSTRAINT `fk_writelog_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`participant_last_interview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`participant_last_interview` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`participant_last_interview` (
  `participant_id` INT UNSIGNED NOT NULL,
  `interview_id` INT UNSIGNED NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`participant_id`),
  INDEX `fk_interview_id` (`interview_id` ASC),
  CONSTRAINT `fk_participant_last_interview_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_participant_last_interview_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`interview_last_assignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`interview_last_assignment` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`interview_last_assignment` (
  `interview_id` INT UNSIGNED NOT NULL,
  `assignment_id` INT UNSIGNED NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`interview_id`),
  INDEX `fk_assignment_id` (`assignment_id` ASC),
  CONSTRAINT `fk_interview_last_assignment_interview_id`
    FOREIGN KEY (`interview_id`)
    REFERENCES `sabretooth`.`interview` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_interview_last_assignment_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`assignment_last_phone_call`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`assignment_last_phone_call` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`assignment_last_phone_call` (
  `assignment_id` INT UNSIGNED NOT NULL,
  `phone_call_id` INT UNSIGNED NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`assignment_id`),
  INDEX `fk_phone_call_id` (`phone_call_id` ASC),
  CONSTRAINT `fk_assignment_last_phone_call_assignment_id`
    FOREIGN KEY (`assignment_id`)
    REFERENCES `sabretooth`.`assignment` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_assignment_last_phone_call_phone_call_id`
    FOREIGN KEY (`phone_call_id`)
    REFERENCES `sabretooth`.`phone_call` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sabretooth`.`setting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sabretooth`.`setting` ;

CREATE TABLE IF NOT EXISTS `sabretooth`.`setting` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `survey_without_sip` TINYINT(1) NOT NULL DEFAULT 0,
  `calling_start_time` TIME NOT NULL DEFAULT '9:00',
  `calling_end_time` TIME NOT NULL DEFAULT '21:00',
  `short_appointment` INT UNSIGNED NOT NULL DEFAULT 30,
  `long_appointment` INT UNSIGNED NOT NULL DEFAULT 60,
  `pre_call_window` INT UNSIGNED NOT NULL DEFAULT 5,
  `post_call_window` INT UNSIGNED NOT NULL DEFAULT 15,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  UNIQUE INDEX `uq_site_id` (`site_id` ASC),
  CONSTRAINT `fk_setting_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `sabretooth` ;

-- -----------------------------------------------------
-- procedure update_participant_last_interview
-- -----------------------------------------------------

USE `sabretooth`;
DROP procedure IF EXISTS `sabretooth`.`update_participant_last_interview`;

DELIMITER $$
USE `sabretooth`$$
CREATE PROCEDURE update_participant_last_interview(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_interview_last_assignment
-- -----------------------------------------------------

USE `sabretooth`;
DROP procedure IF EXISTS `sabretooth`.`update_interview_last_assignment`;

DELIMITER $$
USE `sabretooth`$$
CREATE PROCEDURE update_interview_last_assignment(IN proc_interview_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO interview_last_assignment( interview_id, assignment_id )
  SELECT interview.id, assignment.id
  FROM interview
  LEFT JOIN assignment ON interview.id = assignment.interview_id
  AND assignment.start_datetime <=> (
    SELECT MAX( start_datetime )
    FROM assignment
    WHERE interview.id = assignment.interview_id
    GROUP BY assignment.interview_id
    LIMIT 1
  )
  WHERE interview.id = proc_interview_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_assignment_last_phone_call
-- -----------------------------------------------------

USE `sabretooth`;
DROP procedure IF EXISTS `sabretooth`.`update_assignment_last_phone_call`;

DELIMITER $$
USE `sabretooth`$$
CREATE PROCEDURE update_assignment_last_phone_call(IN proc_assignment_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO assignment_last_phone_call( assignment_id, phone_call_id )
  SELECT assignment.id, phone_call.id
  FROM assignment
  LEFT JOIN phone_call ON assignment.id = phone_call.assignment_id
  AND phone_call.start_datetime <=> (
    SELECT MAX( start_datetime )
    FROM phone_call
    WHERE assignment.id = phone_call.assignment_id
    GROUP BY phone_call.assignment_id
    LIMIT 1
  )
  WHERE assignment.id = proc_assignment_id;
END$$

DELIMITER ;
USE `cenozo`;

DELIMITER $$

USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`remove_uid_from_pool` $$
USE `cenozo`$$
CREATE TRIGGER remove_uid_from_pool BEFORE
INSERT ON participant
FOR EACH ROW BEGIN
  DELETE FROM unique_identifier_pool WHERE uid = new.uid;
END;$$


DELIMITER ;
USE `sabretooth`;

DELIMITER $$

USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`interview_AFTER_INSERT` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`interview_AFTER_INSERT` AFTER INSERT ON `interview` FOR EACH ROW
BEGIN
  CALL update_participant_last_interview( NEW.participant_id );
  CALL update_interview_last_assignment( NEW.id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`interview_AFTER_UPDATE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`interview_AFTER_UPDATE` AFTER UPDATE ON `interview` FOR EACH ROW
BEGIN
  CALL update_participant_last_interview( NEW.participant_id );
  CALL update_interview_last_assignment( NEW.id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`interview_AFTER_DELETE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`interview_AFTER_DELETE` AFTER DELETE ON `interview` FOR EACH ROW
BEGIN
  CALL update_participant_last_interview( OLD.participant_id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`assignment_AFTER_INSERT` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`assignment_AFTER_INSERT` AFTER INSERT ON `assignment` FOR EACH ROW
BEGIN
  CALL update_interview_last_assignment( NEW.interview_id );
  CALL update_assignment_last_phone_call( NEW.id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`assignment_AFTER_UPDATE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`assignment_AFTER_UPDATE` AFTER UPDATE ON `assignment` FOR EACH ROW
BEGIN
  CALL update_interview_last_assignment( NEW.interview_id );
  CALL update_assignment_last_phone_call( NEW.id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`assignment_AFTER_DELETE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`assignment_AFTER_DELETE` AFTER DELETE ON `assignment` FOR EACH ROW
BEGIN
  CALL update_interview_last_assignment( OLD.interview_id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`phone_call_AFTER_INSERT` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`phone_call_AFTER_INSERT` AFTER INSERT ON `phone_call` FOR EACH ROW
BEGIN
  CALL update_assignment_last_phone_call( NEW.assignment_id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`phone_call_AFTER_UPDATE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`phone_call_AFTER_UPDATE` AFTER UPDATE ON `phone_call` FOR EACH ROW
BEGIN
  CALL update_assignment_last_phone_call( NEW.assignment_id );
END;$$


USE `sabretooth`$$
DROP TRIGGER IF EXISTS `sabretooth`.`phone_call_AFTER_DELETE` $$
USE `sabretooth`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sabretooth`.`phone_call_AFTER_DELETE` AFTER DELETE ON `phone_call` FOR EACH ROW
BEGIN
  CALL update_assignment_last_phone_call( OLD.assignment_id );
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
