define(["appointment"].reduce(function(list,name){return list.concat(cenozoApp.module(name).getRequiredFiles())},[cenozoApp.module("user").getFileUrl("module.js")]),function(){"use strict";var module=cenozoApp.module("user");if(angular.isDefined(module.actions.calendar)){module.addExtraOperation("view",{title:"Calendar",operation:function($state,model){$state.go("user.calendar",{identifier:model.viewModel.record.getIdentifier()})}})}function getEventFromAppointment(appointment,timezone){var event={};if(angular.isUndefined(appointment.subject))appointment.subject="appointment";if(angular.isDefined(appointment.start)&&angular.isDefined(appointment.end)){event=appointment}else{var date=moment(appointment.start_datetime);var offset=moment.tz.zone(timezone).offset(date.unix());if(date.tz(timezone).isDST())offset+=-60;event={title:(angular.isDefined(appointment.uid)?appointment.uid:"new appointment")+(angular.isDefined(appointment.qnaire_rank)?" ("+appointment.qnaire_rank+")":""),getIdentifier:function(){return appointment.getIdentifier()},start:moment(appointment.start_datetime).subtract(offset,"minutes"),end:moment(appointment.end_datetime).subtract(offset,"minutes")}}angular.extend(event,{title:event.title.replace(/\nfor .+$/,"")});return event}cenozo.providers.directive("cnUserCalendar",["CnUserModelFactory","CnUserCalendarFactory",function(CnUserModelFactory,CnUserCalendarFactory){return{templateUrl:cenozoApp.getFileUrl("user","calendar.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model)){$scope.model=CnUserModelFactory.instance();$scope.model.calendarModel=CnUserCalendarFactory.instance($scope.model)}if(angular.isDefined($scope.model.calendarModel))$scope.model.calendarModel.heading="Personal Calendar"}}}]);cenozo.providers.factory("CnUserCalendarFactory",["CnBaseCalendarFactory","CnAppointmentModelFactory","CnSession","$state","$q",function(CnBaseCalendarFactory,CnAppointmentModelFactory,CnSession,$state,$q){var object=function(parentModel){var self=this;CnBaseCalendarFactory.construct(this,parentModel);if(angular.isUndefined(this.settings.views))this.settings.views={};if(angular.isUndefined(this.settings.views.month))this.settings.views.month={};this.settings.views.month.displayEventEnd=true;var appointmentModule=cenozoApp.module("appointment");var appointmentModel=null;var getViewEnabled=parentModel.getViewEnabled;parentModel.getViewEnabled=function(){return true};var promise=parentModel.viewModel.onView().then(function(){appointmentModel=CnAppointmentModelFactory.forUser(parentModel.viewModel.record)});parentModel.getViewEnabled=getViewEnabled;delete this.settings.dayClick;this.settings.eventClick=function(record){angular.element(this).popover("hide");return promise.then(function(){if(angular.isUndefined(record.subject)){console.warn("Clicked on personal calendar event which is not an appointment.")}else if(appointmentModel.getViewEnabled()){if("appointment"==record.subject&&angular.isDefined(appointmentModule.actions.view))return $state.go(record.subject+".view",{identifier:record.getIdentifier()})}})};this.onCalendar=function(replace,minDate,maxDate,ignoreParent){var loadMinDate=self.getLoadMinDate(replace,minDate);var loadMaxDate=self.getLoadMaxDate(replace,maxDate);return promise.then(function(){return appointmentModel.calendarModel.onCalendar(replace,minDate,maxDate,ignoreParent).then(function(){self.cache=appointmentModel.calendarModel.cache;self.cache.forEach(function(item,index,array){array[index]=getEventFromAppointment(item,CnSession.user.timezone)})})})}};return{instance:function(parentModel){return new object(parentModel)}}}])});
