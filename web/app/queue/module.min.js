define(function(){"use strict";try{var module=cenozoApp.module("queue",true)}catch(err){console.warn(err);return}angular.extend(module,{identifier:{column:"name"},name:{singular:"queue",plural:"queues",possessive:"queue's"},columnList:{rank:{title:"Rank",type:"rank"},name:{title:"Name"},participant_count:{title:"Participants",type:"number"}},defaultOrder:{column:"rank",reverse:false}});module.addInputGroup("",{rank:{title:"Rank",type:"rank",constant:true},name:{title:"Name",type:"string",constant:true},title:{title:"Title",type:"string",constant:true},description:{title:"Description",type:"text",constant:true}});if(angular.isDefined(module.actions.tree)){module.addExtraOperation("view",{title:"View Queue Tree",operation:function($state,model){var restrictList=model.viewModel.participantModel.listModel.columnRestrictLists;var params={};if(angular.isDefined(restrictList.qnaire)){var restrict=restrictList.qnaire.findByProperty("test","<=>");params.qnaire=restrict.value}if(angular.isDefined(restrictList.site)){var restrict=restrictList.site.findByProperty("test","<=>");params.site=restrict.value}if(angular.isDefined(restrictList.language)){var restrict=restrictList.language.findByProperty("test","<=>");params.language=restrict.value}$state.go("queue.tree",params)}})}cenozo.providers.directive("cnQueueList",["CnQueueModelFactory",function(CnQueueModelFactory){return{templateUrl:module.getFileUrl("list.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnQueueModelFactory.root}}}]);cenozo.providers.directive("cnQueueTree",["CnQueueTreeFactory","CnSession",function(CnQueueTreeFactory,CnSession){return{templateUrl:module.getFileUrl("tree.tpl.html"),restrict:"E",controller:function($scope){$scope.model=CnQueueTreeFactory.instance();$scope.isLoading=true;$scope.model.onView(true).then(function success(){CnSession.setBreadcrumbTrail([{title:"Queue Tree"}])}).finally(function finished(){$scope.isLoading=false})}}}]);cenozo.providers.directive("cnQueueView",["CnQueueModelFactory",function(CnQueueModelFactory){return{templateUrl:module.getFileUrl("view.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnQueueModelFactory.root}}}]);cenozo.providers.factory("CnQueueListFactory",["CnBaseListFactory",function(CnBaseListFactory){var object=function(parentModel){CnBaseListFactory.construct(this,parentModel)};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnQueueViewFactory",["CnBaseViewFactory",function(CnBaseViewFactory){var object=function(parentModel,root){var self=this;CnBaseViewFactory.construct(this,parentModel,root);this.deferred.promise.then(function(){if(angular.isDefined(self.participantModel)){self.participantModel.queryParameterSubject="queue";self.participantModel.getServiceData=function(type,columnRestrictList){var data=this.$$getServiceData(type,columnRestrictList);if("list"==type)data.repopulate=true;return data};self.participantModel.addColumn("qnaire",{title:"Questionnaire",column:"script.name"},0);self.participantModel.addColumn("language",{title:"Language",column:"language.name"},1);self.participantModel.getChooseEnabled=function(){return false}}})};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnQueueModelFactory",["CnBaseModelFactory","CnQueueListFactory","CnQueueViewFactory",function(CnBaseModelFactory,CnQueueListFactory,CnQueueViewFactory){var object=function(root){var self=this;CnBaseModelFactory.construct(this,module);this.listModel=CnQueueListFactory.instance(this);this.viewModel=CnQueueViewFactory.instance(this,root)};return{root:new object(true),instance:function(){return new object(false)}}}]);cenozo.providers.factory("CnQueueTreeFactory",["$q","$state","CnQueueModelFactory","CnSession","CnHttpFactory",function($q,$state,CnQueueModelFactory,CnSession,CnHttpFactory){var object=function(root){var self=this;this.queueList=[];this.queueTree=[];this.queueModel=CnQueueModelFactory.root;this.form={canRepopulate:3<=CnSession.role.tier,lastRepopulation:null,isRepopulating:false,qnaire_id:undefined,qnaireList:[],site_id:undefined,siteList:[],language_id:undefined,languageList:[]};this.repopulate=function(){self.form.isRepopulating=true;if(0<self.queueTree.length){self.queueList.forEach(function(item,index,array){if(0<index&&angular.isDefined(item)){array[index].participant_count=0;array[index].childTotal=0;array[index].button.name="…"}})}CnHttpFactory.instance({path:"queue/1?repopulate=full"}).get().then(function success(){self.onView()}).finally(function finished(){self.form.isRepopulating=false})};this.refreshState=function(){var qnaireName=undefined;if(angular.isDefined(this.form.qnaire_id)){var qnaire=this.form.qnaireList.findByProperty("value",this.form.qnaire_id);if(qnaire)qnaireName=qnaire.name}this.queueModel.setQueryParameter("qnaire",qnaireName);var siteName=undefined;if(angular.isDefined(this.form.site_id)){var site=this.form.siteList.findByProperty("value",this.form.site_id);if(site)siteName=site.name}this.queueModel.setQueryParameter("site",siteName);var languageName=undefined;if(angular.isDefined(this.form.language_id)){var language=this.form.languageList.findByProperty("value",this.form.language_id);if(language)languageName=language.name}this.queueModel.setQueryParameter("language",languageName);return $q.all([this.queueModel.reloadState(false,true),this.onView(false)])};this.onView=function(updateQueue){if(0<self.queueTree.length){self.queueList.forEach(function(item,index,array){if(0<index&&angular.isDefined(item)){array[index].participant_count=0;array[index].childTotal=0;array[index].button.name="…"}})}var promiseList=[];if(0==self.form.qnaireList.length){promiseList.push(CnHttpFactory.instance({path:"qnaire",data:{select:{column:["id",{table:"script",column:"name"}]},modifier:{order:"rank"}}}).query().then(function(response){self.form.qnaireList=[{value:undefined,name:"Any"}];response.data.forEach(function(item){self.form.qnaireList.push({value:item.id,name:item.name})})}))}if(0==self.form.siteList.length&&CnSession.role.allSites){promiseList.push(CnHttpFactory.instance({path:"site",data:{select:{column:["id","name"]},modifier:{order:"name"}}}).query().then(function(response){self.form.siteList=[{value:undefined,name:"All"}];response.data.forEach(function(item){self.form.siteList.push({value:item.id,name:item.name})})}))}if(0==self.form.languageList.length){promiseList.push(CnHttpFactory.instance({path:"language",data:{select:{column:["id","name"]},modifier:{where:{column:"active",operator:"=",value:true},order:"name"}}}).query().then(function(response){self.form.languageList=[{value:undefined,name:"Any"}];response.data.forEach(function(item){self.form.languageList.push({value:item.id,name:item.name})})}))}return $q.all(promiseList).then(function(){var qnaireName=self.queueModel.getQueryParameter("qnaire");if(angular.isDefined(qnaireName)){var qnaire=self.form.qnaireList.findByProperty("name",qnaireName);self.form.qnaire_id=qnaire?qnaire.value:undefined}var siteName=self.queueModel.getQueryParameter("site");if(angular.isDefined(siteName)){var site=self.form.siteList.findByProperty("name",siteName);self.form.site_id=site?site.value:undefined}var languageName=self.queueModel.getQueryParameter("language");if(angular.isDefined(languageName)){var language=self.form.languageList.findByProperty("name",languageName);self.form.language_id=language?language.value:undefined}var whereList=[];if(angular.isDefined(self.form.qnaire_id))whereList.push({column:"qnaire_id",operator:"=",value:self.form.qnaire_id});if(angular.isDefined(self.form.site_id))whereList.push({column:"site_id",operator:"=",value:self.form.site_id});if(angular.isDefined(self.form.language_id))whereList.push({column:"language_id",operator:"=",value:self.form.language_id});return CnHttpFactory.instance({path:"queue?full=1"+(updateQueue?"&repopulate=time":""),data:{modifier:{order:"id",where:whereList},select:{column:["id","parent_queue_id","rank","name","title","participant_count"]}}}).query().then(function(response){if(0<self.queueTree.length){response.data.forEach(function(item){var queue=self.queueList[item.id];queue.participant_count=item.participant_count;queue.button.name=item.participant_count;queue.last_repopulation=item.last_repopulation})}else{var eligibleQueueId=null;var oldParticipantQueueId=null;response.data.forEach(function(item){if(null===eligibleQueueId&&"eligible"==item.name)eligibleQueueId=item.id;if(null===oldParticipantQueueId&&"old participant"==item.name)oldParticipantQueueId=item.id;item.branchList=[];item.initialOpen=null===oldParticipantQueueId||oldParticipantQueueId>item.id;item.open=item.initialOpen;item.button={id:item.id,name:item.participant_count,go:function(){var restrict={};var qnaireName=self.queueModel.getQueryParameter("qnaire");if(qnaireName)restrict.qnaire=[{test:"<=>",value:qnaireName}];var siteName=self.queueModel.getQueryParameter("site");if(siteName)restrict.site=[{test:"<=>",value:siteName}];var languageName=self.queueModel.getQueryParameter("language");if(languageName)restrict.language=[{test:"<=>",value:languageName}];var params={identifier:this.id};if(0<Object.keys(restrict).length)params.restrict=angular.toJson(restrict);$state.go("queue.view",params)}};if(null!==item.rank){item.title="Q"+item.rank+": "+item.title;item.color="success"}self.queueList[item.id]=item;if(null!==item.parent_queue_id&&"qnaire"!=item.name){if("qnaire"==self.queueList[item.parent_queue_id].name)item.parent_queue_id=eligibleQueueId;self.queueList[item.parent_queue_id].branchList.push(item)}});self.queueList.forEach(function(item){if(angular.isDefined(item)&&null===item.parent_queue_id)self.queueTree.push(item)})}self.queueList.forEach(function(queue,index,array){if("all"==queue.name)self.form.lastRepopulation=CnSession.formatValue(queue.last_repopulation,"datetimesecond",false);if(angular.isDefined(queue)&&0<queue.branchList.length){var count=0;queue.branchList.forEach(function(branch){count+=branch.participant_count});array[index].childTotal=count;if(queue.childTotal!=queue.participant_count)console.error('Queue "'+queue.title+'" has '+queue.participant_count+" participants but child queues add up to "+queue.childTotal+" (they should be equal)")}})})})}};return{instance:function(){return new object(false)}}}])});
